{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.11.9",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing"
            }
        },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "azure",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of cluster VNET."
            }
        },
        "vnetCidr": {
            "type": "string",
            "metadata": {
                "description": "CIDR of cluster VNET."
            }
        },
        "vnetSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of cluster subnet."
            }
        },
        "vnetSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "CIDR of cluster subnet."
            }
        },
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "roleNameGuid": {
            "type": "string",
            "metadata": {
                "description": "A new GUID used to identify the cluster subnet role assignment."
            }
        },
        "principalId": {
            "type": "string",
            "metadata": {
                "description": "The objectId of service principal"
            }
        },
        "inboundFirewallResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the inbound firewall"
            }
        },
        "inboundFirewallVnetName": {
            "type": "string",
            "metadata": {
                "description": "VN Name of the VNet where the inbound firewall resides, if the app is going to be connected to a hub firewall"
            }
        },
        "connectToHub": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No",
            "metadata": {
                "description": "Select Yes, if you want the outbound traffic to be protected by a hub firewall."
            }
        },
        "hubResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the Hub, if the app is going to be connected to a hub firewall"
            },
            "defaultValue": "hub-resource-group"
        },
        "hubVnetName": {
            "type": "string",
            "defaultValue": "hub-vnet",
            "metadata": {
                "description": "VN Name of the VNet where the hub resides, if the app is going to be connected to a hub firewall"
            }
        },
        "hubLoadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the outbound Load Balancer in the hub, if the app is going to be connected to a firewall."
            },
            "defaultValue": "1.2.3.4"
        }
    },
    "variables": {
        "vnetRef": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
        "vnetSubnetRef": "[concat(variables('vnetRef'),'/subnets/',parameters('vnetSubnetName'))]",
        "aksToSpokePeeringName": "[concat(parameters('vnetName'), '-', parameters('inboundFirewallVnetName'), 'vnet-peering')]",
        "spokeToAksPeeringName": "[concat(parameters('inboundFirewallVnetName'), '-', parameters('vnetName'), 'vnet-peering')]",
        "aksToHubPeeringName": "[concat(parameters('vnetName'), '-', parameters('hubVnetName'), 'vnet-peering')]",
        "HubToAksPeeringName": "[concat(parameters('hubVnetName'), '-', parameters('vnetName'), 'vnet-peering')]"
    },
    "resources": [
        {
            "apiVersion": "2018-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[concat('Microsoft.Resources/deployments/', 'ClusterSubnetRoleAssignmentDeployment')]"
            ],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[variables('vnetSubnetRef')]"
                    }
                ],
                "servicePrincipalProfile": {
                    "ClientId": "[parameters('servicePrincipalClientId')]",
                    "Secret": "[parameters('servicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                }
            },
            "tags": {
                "inboundrg": "[parameters('inboundFirewallResourceGroupName')]"
            }
        },
        {
            "apiVersion": "2018-08-01",
            "name": "[parameters('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[parameters('location')]",
            "properties": {
                "subnets": [
                    {
                        "name": "[parameters('vnetSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetSubnetCidr')]"
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetCidr')]"
                    ]
                }
            },
            "tags": {
                "inboundrg": "[parameters('inboundFirewallResourceGroupName')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterSubnetRoleAssignmentDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(parameters('vnetName'), '/', parameters('vnetSubnetName'), '/Microsoft.Authorization/', parameters('roleNameGuid'))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[parameters('principalId')]",
                                "scope": "[variables('vnetSubnetRef')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('vnetName'), variables('aksToHubPeeringName'))]"
            ],
            "name": "NestedTemplateForSpokeVnetPeering",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('inboundFirewallResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('inboundFirewallVnetName'), '/', variables('spokeToAksPeeringName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2017-03-01",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "true",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                                }
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "name": "NestedTemplateForHubVnetPeering",
            "condition": "[equals(parameters('connectToHub'), 'Yes')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('hubResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('hubVnetName'), '/', variables('hubToAksPeeringName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2017-03-01",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "true",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                                }
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "name": "[concat(parameters('vnetName'), '/', variables('aksToSpokePeeringName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "Microsoft.Resources/deployments/NestedTemplateForSpokeVnetPeering"
            ],
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2017-03-01",
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "true",
                "useRemoteGateways": "false",
                "remoteVirtualNetwork": {
                    "id": "[resourceId(parameters('inboundFirewallResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('inboundFirewallVnetName'))]"
                }
            }
        },
        {
            "name": "[concat(parameters('vnetName'), '/', variables('aksToHubPeeringName'))]",
            "condition": "[equals(parameters('connectToHub'), 'Yes')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "Microsoft.Resources/deployments/NestedTemplateForHubVnetPeering"
            ],
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2017-03-01",
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "true",
                "useRemoteGateways": "false",
                "remoteVirtualNetwork": {
                    "id": "[resourceId(parameters('hubResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))).fqdn]"
        }
    }
}
